{"version":3,"sources":["components/Home.js","utils/api.js","components/Profile.js","components/Posts.js","components/App.js","index.js"],"names":["Home","POSTS_API_URL","apiCall","url","method","token","body","data","fetch","setToken","getFetchOptions","response","json","error","console","log","toUpperCase","headers","JSON","stringify","Object","assign","fetchPosts","posts","loginUser","username","password","guest","login","user","registerUser","registration","Profile","setUser","useState","setUsername","setPassword","isRegistering","setIsRegistering","handleSubmit","event","preventDefault","onClick","onSubmit","onChange","target","value","required","name","type","placeholder","Posts","setPosts","setFeaturedPost","featuredPost","search","setSearch","history","useHistory","useEffect","filter","post","location","description","toLowerCase","includes","searchMatches","map","push","id","alert","handlePostClick","className","App","exact","to","activeClassName","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9fa3525e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Home = () => {\r\n    return <div>Home</div>\r\n}\r\n\r\nexport default Home;","const POSTS_API_URL = 'http://localhost:4000/api/2204-FTB-MT-WEB-PT'\r\n\r\nexport const apiCall = async (url, method='GET', token, body) => {\r\n\r\n    let data = false;\r\n    try {\r\n        const response = await fetch(\r\n            POSTS_API_URL + url,\r\n            setToken(getFetchOptions(method, body), token)\r\n        );\r\n        data = await response.json();\r\n\r\n        if(data.error) {\r\n            throw data.error;\r\n        }\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n    return data;\r\n}\r\n\r\nconst getFetchOptions = (method, body) => {\r\n    return {\r\n        method: method.toUpperCase(),\r\n        headers: {\r\n            'Conten-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n}\r\n\r\nconst setToken = (body, token) => {\r\n    return token ?\r\n    Object.assign(body, {\r\n        headers: Object.assign(body.headers, {'Authorization': `Bearer ${token}`}) \r\n    }) :\r\n    body;\r\n}\r\n\r\nexport const fetchPosts = async (token) => {\r\n    const data = await apiCall('/posts', 'GET', token)\r\n    if(!data || !data.data) {\r\n        return []\r\n    }\r\n    return data.data.posts || [];\r\n}\r\n\r\nexport const loginUser = async (username, password) => {\r\n    const login = await apiCall(\"/guests/login\", \"POST\", null, {\r\n        guest: {username, password}\r\n    })\r\n    return {\r\n        user: login.data.guest,\r\n        token: login.data.token\r\n    }\r\n}\r\n\r\nexport const registerUser = async (username, password) => {\r\n    const registration = await apiCall(\"/guests/register\", \"POST\", null, {\r\n        guest: {username, password}\r\n    })\r\n    return {\r\n        user: registration.data.guest,\r\n        token: registration.data.token\r\n    }\r\n}\r\n\r\nexport const submitMessage = async (token, content, postId) => {\r\n    const data = await apiCall(\r\n        `/posts/${postId}/messages`,\r\n        'POST',\r\n        token,\r\n        {message: {content}, guest: {token}}\r\n    )\r\n    return data;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { loginUser, registerUser } from \"../utils/api\";\r\n\r\nconst Profile = ({ user, setUser, token, setToken }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isRegistering, setIsRegistering] = useState(false);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (isRegistering) {\r\n            const { user, token } = await registerUser(username, password)\r\n            setUser(user);\r\n            setToken(token);\r\n        } else {\r\n            const { user, token } = await loginUser(username, password)\r\n            setUser(user);\r\n            setToken(token);\r\n        }\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        setUser(false);\r\n        setToken('');\r\n    }\r\n\r\n    const toggleRegistration = () => {\r\n        setIsRegistering(!isRegistering);\r\n    }\r\n\r\n    return <>\r\n        {\r\n            (user && token) ?\r\n                <>\r\n                    <h1>User Profile</h1>\r\n                    <p>Hi {user.username} is logged in</p>\r\n                    <button onClick={handleLogout}>Logout</button>\r\n                </> :\r\n                <>\r\n                    <h1>{isRegistering ? \"Registration\" : \"Login\"}</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input\r\n                            onChange={(event) => setUsername(event.target.value)}\r\n                            required\r\n                            name=\"username\"\r\n                            type=\"text\"\r\n                            placeholder=\"username\"\r\n                            value={username}\r\n                        ></input>\r\n                        <input\r\n                            onChange={(event) => setPassword(event.target.value)}\r\n                            required\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"password\"\r\n                            value={password}\r\n                        ></input>\r\n                        <button type=\"submit\">Submit</button>\r\n                    </form>\r\n                    <button onClick={toggleRegistration}>Register/Login</button>\r\n                </>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { fetchPosts } from \"../utils/api\"\r\n\r\nconst Posts = ({\r\n    user, token,\r\n    posts,\r\n    setPosts,\r\n    featuredPost, setFeaturedPost }) => {\r\n\r\n    const [search, setSearch] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => (async () => setPosts(await fetchPosts(token)))(), [])\r\n\r\n    const searchMatches = (post) => {\r\n        return `${post.location} ${post.description}`\r\n            .toLowerCase()\r\n            .includes(search, toLowerCase())\r\n    }\r\n\r\n    const handlePostClick = (event, post) => {\r\n        if (user && token) {\r\n            setFeaturedPost(post);\r\n            history.push(`/posts/${post.id}`)\r\n        } else {\r\n            alert(\"not logged in\")\r\n        }\r\n    }\r\n\r\n    return <>\r\n\r\n        <h1>Posts</h1>\r\n\r\n        <input\r\n            onChange={(event) => setSearch(event.target.value)}\r\n            type=\"text\" name=\"search\" placeholder=\"search\"\r\n        />\r\n        <form>\r\n            <button onClick={(event) => {handleSubmit(event)}}>Create Post</button>\r\n            \r\n        </form>\r\n        <ul>\r\n            {\r\n                posts.filter(post => {\r\n                    return searchMatches(post)\r\n                }).map(post => {\r\n                    return <li key={post.id} onClick={(event) => { handlePostClick(event, post) }} className=\"post-body\">\r\n                        <div>{post.location}</div>\r\n                        <div>{post.description}</div>\r\n                    </li>\r\n                })\r\n            }\r\n        </ul>\r\n    </>\r\n}\r\n\r\nexport default Posts;","import React, { useState } from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Profile from \"./Profile\";\r\nimport Posts from \"./Posts\";\r\nimport FeaturedPost from \"./FeaturedPost\";\r\n\r\n\r\nconst App = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [featuredPost, setFeaturedPost] = useState('');\r\n    const [newPost, setNewPost] = useState(false);\r\n    const [user, setUser] = useState(false);\r\n    const [token, setToken] = useState('');\r\n\r\n    return <main>\r\n        <nav>\r\n            <NavLink exact to=\"/\" className=\"navlink\" activeClassName=\"active\">\r\n                Home\r\n            </NavLink>\r\n\r\n            <NavLink to=\"/posts\" className=\"navlink\" activeClassName=\"active\">\r\n                Posts\r\n            </NavLink>\r\n\r\n            <NavLink to=\"/login\" className=\"navlink\" activeClassName=\"active\">\r\n                Profile\r\n            </NavLink>\r\n        </nav>\r\n        <Route exact path=\"/\">\r\n            <Home />\r\n        </Route>\r\n        <Route path=\"/posts\">\r\n            <Route path=\"/posts/:postId\">\r\n                {user && token &&\r\n                    <FeaturedPost\r\n                        user={user}\r\n                        token={token}\r\n                        featuredPost={featuredPost}\r\n                        setFeaturedPost={setFeaturedPost}\r\n                    />\r\n                }\r\n            </Route>\r\n            <Posts\r\n                user={user}\r\n                token={token}\r\n                featuredPost={featuredPost}\r\n                setFeaturedPost={setFeaturedPost}\r\n                posts={posts}\r\n                setPosts={setPosts} />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n            <Profile\r\n                user={user}\r\n                setUser={setUser}\r\n                token={token}\r\n                setToken={setToken} />\r\n        </Route>\r\n    </main>\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { App } from \"./components\";\r\n\r\nimport './style.css'\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('app')\r\n)"],"sourceRoot":""}